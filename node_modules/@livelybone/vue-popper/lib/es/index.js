/**
 * Bundle of @livelybone/vue-popper
 * Generated: 2020-05-17
 * Version: 2.4.0
 * License: MIT
 * Author: 2631541504@@qq.com
 */

import Popper from 'popper.js';

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(Object(source), true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

var isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined';

function convertPos(arrowPosition, arrowOffset, data) {
  var type = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'left';
  var offsets = data.offsets,
      arrowElement = data.arrowElement;
  var arrow = offsets.arrow,
      reference = offsets.reference,
      popper = offsets.popper;
  var pos = type === 'left' ? arrow.left : arrow.top;
  var pos1;

  if (typeof pos === 'number') {
    var altSide = type === 'left' ? 'left' : 'top';
    var len = type === 'left' ? 'width' : 'height';
    var offsetLen = type === 'left' ? 'offsetWidth' : 'offsetHeight';

    if (arrowPosition === 'start') {
      pos1 = arrowOffset + Math.max(0, -(popper[altSide] - reference[altSide]));
    } else if (arrowPosition === 'end') {
      pos1 = Math.min(reference[len], popper[len]) - Math.min(0, popper[altSide] - reference[altSide]) - arrowOffset - arrowElement[offsetLen];
    } else if (pos < arrowOffset) {
      pos1 = arrowOffset;
    } else {
      var $pos = popper[len] - arrowElement[offsetLen] - arrowOffset;
      if (pos > $pos) pos1 = $pos;else pos1 = pos;
    }
  }

  return pos1;
}

function arrowModifier(arrowPosition, arrowOffset, dataObject, options) {
  var data = Popper.Defaults.modifiers.arrow.fn(dataObject, options);
  data.offsets.arrow.left = convertPos(arrowPosition, arrowOffset, data);
  data.offsets.arrow.top = convertPos(arrowPosition, arrowOffset, data, 'top');
  return data;
}
function setStyle() {
  if (isBrowser) {
    var id = 'vue-popper-module-style';

    if (!document.getElementById(id)) {
      var style = document.createElement('style');
      style.id = id;
      style.innerText = '.arrow-extend,.vue-popper[x-placement^=top] .arrow,.vue-popper[x-placement^=top] .arrow:before,.vue-popper[x-placement^=bottom] .arrow,.vue-popper[x-placement^=bottom] .arrow:before,.vue-popper[x-placement^=left] .arrow,.vue-popper[x-placement^=left] .arrow:before,.vue-popper[x-placement^=right] .arrow,.vue-popper[x-placement^=right] .arrow:before{position:absolute;width:0;height:0}' + '.vue-popper{border:1px solid #c2ccdc;border-radius:.2em;background:#fff}' + '.vue-popper[x-placement^=top]{margin-bottom:.75em}' + '.vue-popper[x-placement^=top] .arrow{bottom:-.4em;border:.4em solid transparent;border-bottom:0;border-top-color:#c2ccdc}' + ".vue-popper[x-placement^=top] .arrow:before{content:'';bottom:-.4em;border:.4em solid transparent;border-bottom:0;border-top-color:#fff;left:-.4em;bottom:1px}" + '.vue-popper[x-placement^=bottom]{margin-top:.75em}' + '.vue-popper[x-placement^=bottom] .arrow{top:-.4em;border:.4em solid transparent;border-top:0;border-bottom-color:#c2ccdc}' + ".vue-popper[x-placement^=bottom] .arrow:before{content:'';top:-.4em;border:.4em solid transparent;border-top:0;border-bottom-color:#fff;left:-.4em;top:1px}" + '.vue-popper[x-placement^=left]{margin-right:.75em}' + '.vue-popper[x-placement^=left] .arrow{right:-.4em;border:.4em solid transparent;border-right:0;border-left-color:#c2ccdc}' + ".vue-popper[x-placement^=left] .arrow:before{content:'';right:-.4em;border:.4em solid transparent;border-right:0;border-left-color:#fff;top:-.4em;right:1px}" + '.vue-popper[x-placement^=right]{margin-left:.75em}' + '.vue-popper[x-placement^=right] .arrow{left:-.4em;border:.4em solid transparent;border-left:0;border-right-color:#c2ccdc}' + ".vue-popper[x-placement^=right] .arrow:before{content:'';left:-.4em;border:.4em solid transparent;border-left:0;border-right-color:#fff;top:-.4em;left:1px}";
      document.head.appendChild(style);
    }
  }
}

var script = {
  name: 'VuePopper',
  props: {
    arrowPosition: {
      default: 'middle',
      // Options: ['middle', 'start', 'end']
      type: String
    },
    arrowOffsetScaling: {
      default: isBrowser && window.devicePixelRatio || 1,
      type: Number
    },
    referenceElm: isBrowser ? [Window, Element, Document] : Object,
    popperOptions: Object
  },
  data: function data() {
    return {
      popperJs: null
    };
  },
  computed: {
    options: function options() {
      var _this = this;

      var _ref = this.popperOptions || {},
          modifiers = _ref.modifiers;

      return _objectSpread2({}, this.popperOptions, {
        modifiers: _objectSpread2({}, modifiers, {
          arrow: {
            fn: function fn() {
              for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
                args[_key] = arguments[_key];
              }

              return arrowModifier.apply(void 0, [_this.arrowPosition, _this.arrowOffset].concat(args));
            },
            element: '[x-arrow]'
          }
        })
      });
    },
    arrowOffset: function arrowOffset() {
      return 10 * this.arrowOffsetScaling;
    }
  },
  watch: {
    referenceElm: function referenceElm() {
      this.createPopper();
    }
  },
  methods: {
    referenceEle: function referenceEle() {
      if (this.referenceElm) return this.referenceElm;
      if (!isBrowser || !this.$el) return null;
      return this.$el.parentNode || window;
    },
    createPopper: function createPopper() {
      var referenceEle = this.referenceEle();

      if (referenceEle) {
        this.destroyPopper();
        this.popperJs = new Popper(referenceEle, this.$el, this.options);
      }
    },
    updatePopper: function updatePopper() {
      if (this.popperJs) this.popperJs.scheduleUpdate();
    },
    destroyPopper: function destroyPopper() {
      if (this.popperJs) this.popperJs.destroy();
    }
  },
  mounted: function mounted() {
    var _this2 = this;

    setStyle();
    this.createPopper();
    this.$on('hook:updated', function () {
      return _this2.updatePopper();
    });
    this.$on('hook:beforeDestroy', function () {
      return _this2.destroyPopper();
    });
  }
};

function normalizeComponent(template, style, script, scopeId, isFunctionalTemplate, moduleIdentifier
/* server only */
, shadowMode, createInjector, createInjectorSSR, createInjectorShadow) {
  if (typeof shadowMode !== 'boolean') {
    createInjectorSSR = createInjector;
    createInjector = shadowMode;
    shadowMode = false;
  } // Vue.extend constructor export interop.


  var options = typeof script === 'function' ? script.options : script; // render functions

  if (template && template.render) {
    options.render = template.render;
    options.staticRenderFns = template.staticRenderFns;
    options._compiled = true; // functional template

    if (isFunctionalTemplate) {
      options.functional = true;
    }
  } // scopedId


  if (scopeId) {
    options._scopeId = scopeId;
  }

  var hook;

  if (moduleIdentifier) {
    // server build
    hook = function hook(context) {
      // 2.3 injection
      context = context || // cached call
      this.$vnode && this.$vnode.ssrContext || // stateful
      this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext; // functional
      // 2.2 with runInNewContext: true

      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
        context = __VUE_SSR_CONTEXT__;
      } // inject component styles


      if (style) {
        style.call(this, createInjectorSSR(context));
      } // register component module identifier for async chunk inference


      if (context && context._registeredComponents) {
        context._registeredComponents.add(moduleIdentifier);
      }
    }; // used by ssr in case component is cached and beforeCreate
    // never gets called


    options._ssrRegister = hook;
  } else if (style) {
    hook = shadowMode ? function (context) {
      style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot));
    } : function (context) {
      style.call(this, createInjector(context));
    };
  }

  if (hook) {
    if (options.functional) {
      // register for functional component in vue file
      var originalRender = options.render;

      options.render = function renderWithStyleInjection(h, context) {
        hook.call(context);
        return originalRender(h, context);
      };
    } else {
      // inject component registration as beforeCreate hook
      var existing = options.beforeCreate;
      options.beforeCreate = existing ? [].concat(existing, hook) : [hook];
    }
  }

  return script;
}

/* script */
var __vue_script__ = script;
/* template */

var __vue_render__ = function __vue_render__() {
  var _vm = this;

  var _h = _vm.$createElement;

  var _c = _vm._self._c || _h;

  return _c('div', {
    staticClass: "vue-popper"
  }, [_c('div', {
    staticClass: "arrow",
    attrs: {
      "x-arrow": ""
    }
  }), _vm._v(" "), _vm._t("default")], 2);
};

var __vue_staticRenderFns__ = [];
/* style */

var __vue_inject_styles__ = undefined;
/* scoped */

var __vue_scope_id__ = undefined;
/* module identifier */

var __vue_module_identifier__ = undefined;
/* functional template */

var __vue_is_functional_template__ = false;
/* style inject */

/* style inject SSR */

/* style inject shadow dom */

var __vue_component__ = normalizeComponent({
  render: __vue_render__,
  staticRenderFns: __vue_staticRenderFns__
}, __vue_inject_styles__, __vue_script__, __vue_scope_id__, __vue_is_functional_template__, __vue_module_identifier__, false, undefined, undefined, undefined);

export default __vue_component__;
