/**
 * Bundle of @livelybone/copy
 * Generated: 2020-05-30
 * Version: 2.6.5
 * License: MIT
 * Author: 2631541504@qq.com
 */

!function(n,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(n=n||self).objectDeepCopy=t()}(this,function(){"use strict";function f(n){return(f="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(n)}function c(n){return function(n){if(Array.isArray(n)){for(var t=0,e=new Array(n.length);t<n.length;t++)e[t]=n[t];return e}}(n)||function(n){if(Symbol.iterator in Object(n)||"[object Arguments]"===Object.prototype.toString.call(n))return Array.from(n)}(n)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}var u,n;function a(e,n,t){if(function(n){return!("object"!==f(n)||null===n||n instanceof Promise||n instanceof Date||n instanceof Error||n instanceof RegExp||"undefined"!=typeof window&&(n instanceof FileList||n instanceof File||n instanceof Element||n instanceof Window||n instanceof Document))&&(n instanceof Array?u.Array:u.NormalObj)}(e)){var o=function(n){return n instanceof Array?[]:{}}(e),r=n?[].concat(c(n),[e]):[e],i=t?[].concat(c(t),[o]):[o];return Object.keys(e).forEach(function(n){var t=function(t,e){var n=Object.keys(e).find(function(n){return e[+n]===t});return void 0!==n?{index:+n}:void 0}(e[n],r);o[n]=t?i[t.index]:a(e[n],r,i)}),o}return e}return(n=u=u||{}).NormalObj="object",n.Array="Array",function(n){return a(n)}});
